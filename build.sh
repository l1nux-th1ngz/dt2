#!/bin/bash

# Define the directory to store lists
DOCUMENTS_DIR="$HOME/Documents"

# Add animations
spin[0]="-"
spin[1]="\\"
spin[2]="|"
spin[3]="/"
sleep 20 & PID=$! #simulate a long process

echo "THIS MAY TAKE A WHILE, PLEASE BE PATIENT WHILE ______ IS RUNNING..."
printf "["
# While process is running...
while kill -0 $PID 2> /dev/null; do 
    for i in "${spin[@]}"
    do
        echo -ne "\b$i"
        sleep 5m 35.5s
    done
done
printf "] done!"

# Tip: save your customized commands into a file on an internet server
# and fetch that file with command:
#
#     wget -O ~/user_commands.bash "URL-referring-the-file"
#
# Ideas for customization:
#   - install packages
#   - remove packages
#   - enable or disable system services
#   - writing dotfiles under $HOME
#   - etc.
# Advanced tip :
#    To write files directly into $HOME, you can find the new username
#    as the first parameter given to user_commands.bash, e.g.
#        username="$1"
#    Then you may write files under folder
#        /home/$username
#
#----------------------------------------------------------------------------------
#
# Now *you* can add your commands into the two functions below.
#
#----------------------------------------------------------------------------------

_IsoConfig() {
    # ISO configurations here.
    # This runs before calamares is started.

    local -r install_mode="$1"          # 'online' or 'offline'
    # ...
    # ls /home/liveuser
}

_PostInstallCommands() {
    # Post-install commands here.
    # This runs near the end of calamares execution.

    local -r username="$1"              # new user you created for the target
    # ...
    # echo "# Hello world!" >> /home/$username/.bashrc

    #!/bin/bash

    # Install RustUp
    sudo pacman -S --noconfirm rustup

    # Set DEFAULT, PROFILE, and RUN for RustUp
    rustup default nightly
    rustup completions bash | sudo tee /etc/bash_completion.d/rustup
    source $HOME/.cargo/env

    # Install Software and Desktop
    sudo pacman -S --noconfirm gdb ninja gcc cmake meson libxcb xcb-proto xcb-util xcb-util-keysyms libxfixes libx11 libxcomposite xorg-xinput libxrender \
    pixman wayland-protocols cairo pango seatd libxkbcommon xcb-util-wm xorg-xwayland libinput libliftoff libdisplay-info cpio tomlplusplus \
    hyprland waybar kitty firefox nodejs go kvantum wofi gvfs thunar geany geany-plugins gtk2 gtk3 gtk4 gtk-layer-shell grim layer-shell-qt wlsunset \
    pixman automake autoconf autoconf-archive gjs marker nwg-look tilix libindicator-gtk2 libfm-gtk2 libfm-gtk3 xdg-utils libxdg-basedir ffmpeg \
    xdg-desktop-portal xdg-desktop-portal-gtk xdg-desktop-portal-wlr libindicator-gtk3 font-manager xdg-desktop-portal-hyprland terminator \
    archinstall arch-install-scripts archiso archivetools base-devel multilib-devel alsa-firmware linux-firmware sof-firmware udisks2 udiskie \
    pantheon-code tumbler gdk-pixbuf2 vala libhandy zeitgeist sqlite granite granite7 gum bzip3 fuse-zip p7zip unzip zip zlib libzip gtk-chtheme \
    imagemagick mpv viewnoir zathura gtk-engines vivid gtk-theme-elementary gtk-engine-murrine neofetch lsd thefuck adwaita-icon-theme arc-icon-theme \
    ffmpegthumbnailer polkit-kde-agent sddm


    # Update User Directories
    xdg-user-dirs-update

    sleep  5m 15s| pv -t

    # Copy to .config
    cp -R waybar ~/.config
    cp -R wofi ~/.config
    cp -R kitty ~/.config
    cp -R nwg-look ~/.config
    cp -R tilix ~/.config
    cp -R terminator ~/.config
    cp -R mpv ~/.config
    cp -R font-manager ~/.config
    cp -R zathura ~/.config
    cp -R neofetch ~/.config

    # Fix config for hyprland
    sed -i '/monitor/d' ~/.config/hypr/hypr.conf
    echo "monitor = eDP-1,1920x1080@60, 0x0, 1" >> ~/.config/hypr/hypr.conf
    sed -i '/autogenerated/d' ~/.config/hypr/hypr.conf


    # Install Plymouth
    sudo pacman -S --noconfirm plymouth

    # Add HOOKS to plymouth in mkinitcpio
    sudo sed -i 's/^HOOKS.*/HOOKS=(base udev autodetect modconf block encrypt lvm2 filesystems fsck plymouth)/' /etc/mkinitcpio.conf

    # Regenerate initramfs
    sudo mkinitcpio -p linux

    # Custom Pacman.conf
    # Uncommenet
    # Add
    Color
    ILoveCandy
    # Change Downloads=s 
    ParallelDownloads = 10

    # Custom Grub Settings
    sudo sed -i 's/^GRUB_DEFAULT.*/GRUB_DEFAULT=0/' /etc/default/grub
    sudo sed -i 's/^GRUB_TIMEOUT.*/GRUB_TIMEOUT=0/' /etc/default/grub
    sudo sed -i 's/^GRUB_CMDLINE_LINUX_DEFAULT.*/GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet splash"/' /etc/default/grub
    sudo grub-mkconfig -o /boot/grub/grub.cfg

    # Set Plymouth theme
    sudo plymouth-set-default-theme -R glow

    # Disable and enable SDDM with Plymouth
    sudo systemctl disable sddm
    sudo systemctl enable sddm-plymouth

    # Check display manager status
    systemctl status display-manager
}

case "$1" in
    --iso-config)        _IsoConfig "$2" ;;
    offline | online)    _IsoConfig "$1" ;;            # after Galileo neo!
    *)                   _PostInstallCommands "$1" ;;
esac
